. $HOME/.config/workspace/base/fzf/.aliases
. $HOME/.config/workspace/base/envs/.aliases
. $HOME/.config/workspace/base/oh-my-posh/.aliases
. $HOME/.config/workspace/base/tools/.aliases

### Set aliases
alias ls='ls -h --color=auto'
alias ll='ls -l'
alias la='ls -la'
alias rm='rm -i'
alias grep='grep --color=always'
alias more='more --RAW-CONTROL-CHARS --chop-long-lines'
alias less='less --RAW-CONTROL-CHARS --chop-long-lines --IGNORE-CASE'

### functions ######
cheat() { curl cheat.sh/"$1" ; }

## Workspace functions #####
function ws-update() {
    cd ~/.config/workspace
    git pull
    cd -
}

function ws-code()
{
    code ~/.config/workspace
}

function wscd()
{
    cd ~/.config/workspace
}

function ws-setup(){
    echo "installin workspace dependencies..."

    ws-install-env
    ws-install-tools
    ws-install-fzf
    ws-install-oh_my_posh    

    echo "Done!"
}

## system utilities #####
function cleantmp()
{
    _daystoleave=10
    [[ ! -z "$1" ]] && _daystoleave=$1
    sudo find /tmp -type f -atime +$_daystoleave -delete
}

function tmpbackup()
{
    mkdir -p ~/backups 
    cp $1 ~/backups/$1 
    local __size=$(wc -c ~/backups/$1 | awk '{print $1}')

    echo "Backup of $1 created. Size: $__size"
}

function osinfo(){
    if [[ "$_os" = "Darwin" ]]; then
        echo "OS: Mac OS"
        echo "Version: $(sw_vers -productVersion)"
        echo "Build: $(sw_vers -buildVersion)"
    elif [[ "$_os" = "Linux" ]]; then
        echo "OS: Linux"
        echo "Version: $(lsb_release -a)"
    fi
}

