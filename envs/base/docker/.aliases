
function _install_docker {
    [ "$(command -v docker)" ] && echo "Docker is already installed" && return

    if [ -n "$_is_linux" ]
    then
        sudo apt-get update 
        sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        echo \
        "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io

        # Add the current user to the docker group
        #create group
        sudo groupadd docker
        #add user to group
        sudo usermod -aG docker $USER
        newgrp docker

    elif [ -n "$_is_macos" ]
    then
        brew install docker
    fi
}

function _install_docker_compose() {
    [ "$(command -v docker-compose)" ] && echo "Docker-compose is already installed" && return

    if [ -n "$_is_linux" ]; then
        sudo apt-get update
        sudo apt-get install docker-compose
    elif [ -n "$_is_macos" ]; then
        brew install docker-compose
    fi
}

function ws-install-docker() {
    echo "Installing docker..."
    _install_docker
    echo "Installing docker-compose..."
    _install_docker_compose
}

function dkill()
{
    ps axf | grep docker | grep -v grep | awk '{print "kill -9 " $1}' | sudo sh
}

alias dc='docker-compose'
alias d='docker'
alias dstart='sudo systemctl start docker'
alias drestart='sudo systemctl restart docker'
alias dls='docker container ls -a'
alias dim='docker images'


